"use strict";(self.webpackChunkFormioQld=self.webpackChunkFormioQld||[]).push([[610],{2610:function(e,n,t){t.r(n),t.d(n,{default:function(){return c}});var a={};t.r(a),t.d(a,{plsPlusAddress:function(){return i}});var i={form:'<div class="address-autocomplete-container">\n  <input\n    ref="{{ ctx.ref.searchInput }}"\n    {% for (var attr in ctx.inputAttributes) { %}\n      {{attr}}="{{ctx.inputAttributes[attr]}}"\n    {% } %}\n    value="{{ ctx.displayValue }}"\n    autocomplete="off"\n    aria-label="{{ctx.t(\'autocomplete\')}}"\n  >\n  {% if (!ctx.component.disableClearIcon) { %}\n    <i\n      class="address-autocomplete-remove-value-icon fa fa-times"\n      tabindex="{{ ctx.inputAttributes.tabindex }}"\n      ref="{{ ctx.ref.removeValueIcon }}"\n    ></i>\n  {% } %}\n</div>\n{% if (!ctx.hasApiKey) { %}\n    <div class="form-text">Please provide an API key in Provider to use the search function.</div>\n{% } %}\n{% if (ctx.self.manualModeEnabled) { %}\n  <div class="form-check checkbox">\n    <label class="form-check-label">\n      <input\n        ref="{{ ctx.ref.modeSwitcher }}"\n        type="checkbox"\n        class="form-check-input"\n        tabindex="{{ ctx.inputAttributes.tabindex }}"\n        {% if (ctx.mode.manual) { %}checked=true{% } %}\n        {% if (ctx.disabled) { %}disabled=true{% } %}\n      >\n      <span>{{ ctx.component.switchToManualModeLabel }}</span>\n    </label>\n  </div>\n{% } %}\n{% if (ctx.self.manualModeEnabled) { %}\n  <div ref="{{ ctx.nestedKey }}">\n    {{ ctx.children }}\n  </div>\n{% } %}\n{% if (ctx.mode.manual) { %}\n<div>\n  <p><a href="#" target="_blank">Please take part to improve our address database if we couldn\'t find your address.</a></p>\n</div>\n{% } %}',html:'<div ref="value">{% if (ctx.displayValue) { %}{{ctx.displayValue}}{% } else { %}-{% } %}</div>'},c={bootstrap:a}}}]);
//# sourceMappingURL=610.formio-qld.min.js.map